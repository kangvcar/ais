# 共享的代码质量检查工作流
# 可被CI和Release工作流复用，消除重复代码
name: Quality Checks

on:
  workflow_call:
    inputs:
      skip_coverage:
        description: 'Skip coverage upload'
        type: boolean
        default: false
      python_versions:
        description: 'Python versions to test (JSON array)'
        type: string
        default: '["3.8", "3.9", "3.10", "3.11", "3.12"]'
      operating_systems:
        description: 'Operating systems to test (JSON array)'  
        type: string
        default: '["ubuntu-latest", "macos-latest"]'

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ${{ fromJSON(inputs.operating_systems) }}
        python-version: ${{ fromJSON(inputs.python_versions) }}
    
    permissions:
      contents: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: 'setup.py'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-cov
    
    - name: Test installation
      run: |
        ais --version
        ais config --help
    
    - name: Run tests
      run: |
        pytest tests/ -v --cov=ais --cov-report=xml || echo "No tests found"
    
    - name: Upload coverage to Codecov
      if: ${{ !inputs.skip_coverage && matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11' }}
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    name: Code Quality & Linting
    runs-on: ubuntu-latest
    permissions:
      contents: read
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 mypy
        pip install -e .
    
    - name: Run Black formatter check
      run: black --check src/ais/
    
    - name: Run Flake8 linter
      run: flake8 src/ais/ --max-line-length=100
    
    - name: Run MyPy type checker
      run: mypy src/ais/ || echo "MyPy check completed with warnings"